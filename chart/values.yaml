forceRedeploy: true

clusterRole:
  name: clusterRole
  rules:
    -
      apiGroups: [ "" ]
      resources: [ "nodes", "persistentvolumeclaims", "configmaps" ]
      verbs: [ "get", "list", "watch" ]
    -
      apiGroups: [ "" ]
      resources: [ "endpoints", "persistentvolumes", "pods" ]
      verbs: [ "*" ]
    -
      apiGroups: [ "" ]
      resources: [ "events" ]
      verbs: [ "create", "patch" ]
    -
      apiGroups: [ "storage.k8s.io" ]
      resources: [ "storageclasses" ]
      verbs: [ "get", "list", "watch" ]

clusterRoleBinding:
  name: binding
  clusterRoleName: clusterRole
  serviceAccountName: account

configMaps:
  - name: config
    data:
      config.json: |-
        {
                "nodePathMap":[
                {
                        "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                        "paths":["/mnt/shared/cluster"]
                },
                {
                        "node":"jarvis",
                        "paths":["/mnt/shared/cluster", "/dev/dri", "/run/dbus"]
                }
                ]
        }
      setup: |-
        #!/bin/sh
        set -eu
        mkdir -m 0777 -p "$VOL_DIR"
      teardown: |-
        #!/bin/sh
        set -eu
        echo "done"
      helperPod.yaml: |-
        apiVersion: v1
        kind: Pod
        metadata:
          name: helper-pod
        spec:
          containers:
          - name: helper-pod
            image: busybox
            imagePullPolicy: IfNotPresent

deployment:
  replicas: 1
  strategy:
    type: "RollingUpdate"
    maxSurge: 1
    maxUnavailable: 1
  serviceAccountName: account
  containers:
    -
      name: provisioner
      image:
        repository: flaminel/local-path-provisioner
        tag: latest
      resources:
        requests:
          cpu: 50m
          memory: 128Mi
        limits:
          cpu: 100m
          memory: 256Mi
      command:
        - local-path-provisioner
        - --debug
        - start
        - --service-account-name
        - account
        - --configmap-name
        - config
        - --config
        - /etc/config/config.json
      envFromFieldRef:
        - name: POD_NAMESPACE
          fieldPath: metadata.namespace
      volumeMounts:
        - name: config-volume
          mountPath: /etc/config/
  volumes:
    - name: config-volume
      type: configMap
      typeName: config

serviceAccount:
  name: account

storageClasses:
  - name: local-path-persistent
    labels:
      namespace-as-directory: "false"
      random-directory: "false"
    provisioner: rancher.io/local-path
    volumeBindingMode: WaitForFirstConsumer
    reclaimPolicy: Delete
    allowedTopologies:
      - matchLabelExpressions:
          - key: kubernetes.io/hostname
            values:
              - jarvis
  - name: local-path-quicksync
    labels:
      namespace-as-directory: "false"
      random-directory: "false"
    provisioner: rancher.io/local-path
    volumeBindingMode: WaitForFirstConsumer
    reclaimPolicy: Delete
    parameters:
      nodePath: /dev/dri
    allowedTopologies:
      - matchLabelExpressions:
          - key: kubernetes.io/hostname
            values:
              - jarvis
  - name: local-path-volatile
    labels:
      namespace-as-directory: "false"
      random-directory: "true"
    provisioner: rancher.io/local-path
    volumeBindingMode: WaitForFirstConsumer
    reclaimPolicy: Delete
  - name: local-path-dbus
    labels:
      namespace-as-directory: "false"
      random-directory: "false"
    provisioner: rancher.io/local-path
    volumeBindingMode: WaitForFirstConsumer
    reclaimPolicy: Delete
    parameters:
      nodePath: /run/dbus
    allowedTopologies:
      - matchLabelExpressions:
        - key: kubernetes.io/hostname
          values:
            - jarvis